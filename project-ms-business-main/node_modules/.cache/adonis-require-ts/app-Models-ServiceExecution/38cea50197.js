"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var _a, _b, _c, _d, _e, _f;
Object.defineProperty(exports, "__esModule", { value: true });
const luxon_1 = require("luxon");
const Orm_1 = global[Symbol.for('ioc.use')]("Adonis/Lucid/Orm");
const Comment_1 = __importDefault(require("./Comment"));
const Chat_1 = __importDefault(require("./Chat"));
const Customer_1 = __importDefault(require("./Customer"));
const Service_1 = __importDefault(require("./Service"));
class ServiceExecution extends Orm_1.BaseModel {
}
__decorate([
    (0, Orm_1.column)({ isPrimary: true }),
    __metadata("design:type", Number)
], ServiceExecution.prototype, "id", void 0);
__decorate([
    (0, Orm_1.column)(),
    __metadata("design:type", Number)
], ServiceExecution.prototype, "customer_id", void 0);
__decorate([
    (0, Orm_1.column)(),
    __metadata("design:type", Number)
], ServiceExecution.prototype, "service_id", void 0);
__decorate([
    Orm_1.column.dateTime({ autoCreate: true }),
    __metadata("design:type", typeof (_a = typeof luxon_1.DateTime !== "undefined" && luxon_1.DateTime) === "function" ? _a : Object)
], ServiceExecution.prototype, "createdAt", void 0);
__decorate([
    Orm_1.column.dateTime({ autoCreate: true, autoUpdate: true }),
    __metadata("design:type", typeof (_b = typeof luxon_1.DateTime !== "undefined" && luxon_1.DateTime) === "function" ? _b : Object)
], ServiceExecution.prototype, "updatedAt", void 0);
__decorate([
    (0, Orm_1.belongsTo)(() => Customer_1.default, {
        foreignKey: "customer_id",
    }),
    __metadata("design:type", typeof (_c = typeof Orm_1.BelongsTo !== "undefined" && Orm_1.BelongsTo) === "function" ? _c : Object)
], ServiceExecution.prototype, "customer", void 0);
__decorate([
    (0, Orm_1.belongsTo)(() => Service_1.default, {
        foreignKey: "service_id",
    }),
    __metadata("design:type", typeof (_d = typeof Orm_1.BelongsTo !== "undefined" && Orm_1.BelongsTo) === "function" ? _d : Object)
], ServiceExecution.prototype, "service", void 0);
__decorate([
    (0, Orm_1.hasMany)(() => Comment_1.default, {
        foreignKey: "service_execution_id",
    }),
    __metadata("design:type", typeof (_e = typeof Orm_1.HasMany !== "undefined" && Orm_1.HasMany) === "function" ? _e : Object)
], ServiceExecution.prototype, "comments", void 0);
__decorate([
    (0, Orm_1.hasOne)(() => Chat_1.default, {
        foreignKey: "service_execution_id",
    }),
    __metadata("design:type", typeof (_f = typeof Orm_1.HasOne !== "undefined" && Orm_1.HasOne) === "function" ? _f : Object)
], ServiceExecution.prototype, "chat", void 0);
exports.default = ServiceExecution;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2VydmljZUV4ZWN1dGlvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIlNlcnZpY2VFeGVjdXRpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsaUNBQWlDO0FBQ2pDLGdFQVMrQjtBQUMvQix3REFBZ0M7QUFDaEMsa0RBQTBCO0FBQzFCLDBEQUFrQztBQUNsQyx3REFBZ0M7QUFFaEMsTUFBcUIsZ0JBQWlCLFNBQVEsZUFBUztDQW1DdEQ7QUFqQ0M7SUFEQyxJQUFBLFlBQU0sRUFBQyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsQ0FBQzs7NENBQ1Y7QUFHbEI7SUFEQyxJQUFBLFlBQU0sR0FBRTs7cURBQ2tCO0FBRzNCO0lBREMsSUFBQSxZQUFNLEdBQUU7O29EQUNpQjtBQUcxQjtJQURDLFlBQU0sQ0FBQyxRQUFRLENBQUMsRUFBRSxVQUFVLEVBQUUsSUFBSSxFQUFFLENBQUM7a0RBQ3BCLGdCQUFRLG9CQUFSLGdCQUFRO21EQUFDO0FBRzNCO0lBREMsWUFBTSxDQUFDLFFBQVEsQ0FBQyxFQUFFLFVBQVUsRUFBRSxJQUFJLEVBQUUsVUFBVSxFQUFFLElBQUksRUFBRSxDQUFDO2tEQUN0QyxnQkFBUSxvQkFBUixnQkFBUTttREFBQztBQUszQjtJQUhDLElBQUEsZUFBUyxFQUFDLEdBQUcsRUFBRSxDQUFDLGtCQUFRLEVBQUU7UUFDekIsVUFBVSxFQUFFLGFBQWE7S0FDMUIsQ0FBQztrREFDZSxlQUFTLG9CQUFULGVBQVM7a0RBQWtCO0FBSzVDO0lBSEMsSUFBQSxlQUFTLEVBQUMsR0FBRyxFQUFFLENBQUMsaUJBQU8sRUFBRTtRQUN4QixVQUFVLEVBQUUsWUFBWTtLQUN6QixDQUFDO2tEQUNjLGVBQVMsb0JBQVQsZUFBUztpREFBaUI7QUFLMUM7SUFIQyxJQUFBLGFBQU8sRUFBQyxHQUFHLEVBQUUsQ0FBQyxpQkFBTyxFQUFFO1FBQ3RCLFVBQVUsRUFBRSxzQkFBc0I7S0FDbkMsQ0FBQztrREFDZSxhQUFPLG9CQUFQLGFBQU87a0RBQWlCO0FBS3pDO0lBSEMsSUFBQSxZQUFNLEVBQUMsR0FBRyxFQUFFLENBQUMsY0FBSSxFQUFFO1FBQ2xCLFVBQVUsRUFBRSxzQkFBc0I7S0FDbkMsQ0FBQztrREFDVyxZQUFNLG9CQUFOLFlBQU07OENBQWM7QUFsQ25DLG1DQW1DQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERhdGVUaW1lIH0gZnJvbSBcImx1eG9uXCI7XG5pbXBvcnQge1xuICBCYXNlTW9kZWwsXG4gIEJlbG9uZ3NUbyxcbiAgYmVsb25nc1RvLFxuICBjb2x1bW4sXG4gIGhhc01hbnksXG4gIEhhc01hbnksXG4gIEhhc09uZSxcbiAgaGFzT25lLFxufSBmcm9tIFwiQGlvYzpBZG9uaXMvTHVjaWQvT3JtXCI7XG5pbXBvcnQgQ29tbWVudCBmcm9tIFwiLi9Db21tZW50XCI7XG5pbXBvcnQgQ2hhdCBmcm9tIFwiLi9DaGF0XCI7XG5pbXBvcnQgQ3VzdG9tZXIgZnJvbSBcIi4vQ3VzdG9tZXJcIjtcbmltcG9ydCBTZXJ2aWNlIGZyb20gXCIuL1NlcnZpY2VcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2VydmljZUV4ZWN1dGlvbiBleHRlbmRzIEJhc2VNb2RlbCB7XG4gIEBjb2x1bW4oeyBpc1ByaW1hcnk6IHRydWUgfSlcbiAgcHVibGljIGlkOiBudW1iZXI7XG5cbiAgQGNvbHVtbigpXG4gIHB1YmxpYyBjdXN0b21lcl9pZDogbnVtYmVyO1xuXG4gIEBjb2x1bW4oKVxuICBwdWJsaWMgc2VydmljZV9pZDogbnVtYmVyO1xuXG4gIEBjb2x1bW4uZGF0ZVRpbWUoeyBhdXRvQ3JlYXRlOiB0cnVlIH0pXG4gIHB1YmxpYyBjcmVhdGVkQXQ6IERhdGVUaW1lO1xuXG4gIEBjb2x1bW4uZGF0ZVRpbWUoeyBhdXRvQ3JlYXRlOiB0cnVlLCBhdXRvVXBkYXRlOiB0cnVlIH0pXG4gIHB1YmxpYyB1cGRhdGVkQXQ6IERhdGVUaW1lO1xuXG4gIEBiZWxvbmdzVG8oKCkgPT4gQ3VzdG9tZXIsIHtcbiAgICBmb3JlaWduS2V5OiBcImN1c3RvbWVyX2lkXCIsXG4gIH0pXG4gIHB1YmxpYyBjdXN0b21lcjogQmVsb25nc1RvPHR5cGVvZiBDdXN0b21lcj47XG5cbiAgQGJlbG9uZ3NUbygoKSA9PiBTZXJ2aWNlLCB7XG4gICAgZm9yZWlnbktleTogXCJzZXJ2aWNlX2lkXCIsXG4gIH0pXG4gIHB1YmxpYyBzZXJ2aWNlOiBCZWxvbmdzVG88dHlwZW9mIFNlcnZpY2U+O1xuXG4gIEBoYXNNYW55KCgpID0+IENvbW1lbnQsIHtcbiAgICBmb3JlaWduS2V5OiBcInNlcnZpY2VfZXhlY3V0aW9uX2lkXCIsXG4gIH0pXG4gIHB1YmxpYyBjb21tZW50czogSGFzTWFueTx0eXBlb2YgQ29tbWVudD47XG5cbiAgQGhhc09uZSgoKSA9PiBDaGF0LCB7XG4gICAgZm9yZWlnbktleTogXCJzZXJ2aWNlX2V4ZWN1dGlvbl9pZFwiLFxuICB9KVxuICBwdWJsaWMgY2hhdDogSGFzT25lPHR5cGVvZiBDaGF0Pjtcbn1cbiJdfQ==