"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Validator_1 = global[Symbol.for('ioc.use')]("Adonis/Core/Validator");
class CustomerValidator {
    constructor(ctx) {
        this.ctx = ctx;
        this.schema = Validator_1.schema.create({
            customer_id: Validator_1.schema.number.optional([
                Validator_1.rules.unique({
                    table: "customers",
                    column: "id",
                    where: { id: this.ctx.request.input("id") },
                }),
            ]),
            name: Validator_1.schema.string(),
            email: Validator_1.schema.string([
                Validator_1.rules.email(),
                Validator_1.rules.unique({ table: "customers", column: "email" }),
            ]),
            document: Validator_1.schema.string([
                Validator_1.rules.unique({ table: "customers", column: "document" }),
            ]),
            phone: Validator_1.schema.string([Validator_1.rules.mobile({ locale: ["es-CO"] })]),
            gender: Validator_1.schema.string([Validator_1.rules.regex(/^(M|F|O)$/)]),
        });
        this.messages = {
            "name.required": "El campo name es requerido",
            "email.required": "El campo email es requerido",
            "email.email": "El campo email debe ser un correo válido",
            "email.unique": "El campo email ya existe en la tabla customers",
            "document.required": "El campo document es requerido",
            "document.unique": "El campo document ya existe en la tabla customers",
            "phone.required": "El campo phone es requerido",
            "phone.mobile": "El campo phone debe ser un número de teléfono válido",
        };
    }
}
exports.default = CustomerValidator;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ3VzdG9tZXJWYWxpZGF0b3IuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDdXN0b21lclZhbGlkYXRvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDJFQUEyRTtBQUczRSxNQUFxQixpQkFBaUI7SUFDcEMsWUFBc0IsR0FBd0I7UUFBeEIsUUFBRyxHQUFILEdBQUcsQ0FBcUI7UUFFdkMsV0FBTSxHQUFHLGtCQUFNLENBQUMsTUFBTSxDQUFDO1lBQzVCLFdBQVcsRUFBRSxrQkFBTSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUM7Z0JBQ2xDLGlCQUFLLENBQUMsTUFBTSxDQUFDO29CQUNYLEtBQUssRUFBRSxXQUFXO29CQUNsQixNQUFNLEVBQUUsSUFBSTtvQkFDWixLQUFLLEVBQUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxFQUFFO2lCQUM1QyxDQUFDO2FBQ0gsQ0FBQztZQUNGLElBQUksRUFBRSxrQkFBTSxDQUFDLE1BQU0sRUFBRTtZQUNyQixLQUFLLEVBQUUsa0JBQU0sQ0FBQyxNQUFNLENBQUM7Z0JBQ25CLGlCQUFLLENBQUMsS0FBSyxFQUFFO2dCQUNiLGlCQUFLLENBQUMsTUFBTSxDQUFDLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxNQUFNLEVBQUUsT0FBTyxFQUFFLENBQUM7YUFDdEQsQ0FBQztZQUNGLFFBQVEsRUFBRSxrQkFBTSxDQUFDLE1BQU0sQ0FBQztnQkFDdEIsaUJBQUssQ0FBQyxNQUFNLENBQUMsRUFBRSxLQUFLLEVBQUUsV0FBVyxFQUFFLE1BQU0sRUFBRSxVQUFVLEVBQUUsQ0FBQzthQUN6RCxDQUFDO1lBQ0YsS0FBSyxFQUFFLGtCQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsaUJBQUssQ0FBQyxNQUFNLENBQUMsRUFBRSxNQUFNLEVBQUUsQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztZQUMzRCxNQUFNLEVBQUUsa0JBQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxpQkFBSyxDQUFDLEtBQUssQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDO1NBQ2xELENBQUMsQ0FBQztRQUNJLGFBQVEsR0FBbUI7WUFDaEMsZUFBZSxFQUFFLDRCQUE0QjtZQUM3QyxnQkFBZ0IsRUFBRSw2QkFBNkI7WUFDL0MsYUFBYSxFQUFFLDBDQUEwQztZQUN6RCxjQUFjLEVBQUUsZ0RBQWdEO1lBQ2hFLG1CQUFtQixFQUFFLGdDQUFnQztZQUNyRCxpQkFBaUIsRUFBRSxtREFBbUQ7WUFDdEUsZ0JBQWdCLEVBQUUsNkJBQTZCO1lBQy9DLGNBQWMsRUFBRSxzREFBc0Q7U0FDdkUsQ0FBQztJQTlCK0MsQ0FBQztDQStCbkQ7QUFoQ0Qsb0NBZ0NDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc2NoZW1hLCBDdXN0b21NZXNzYWdlcywgcnVsZXMgfSBmcm9tIFwiQGlvYzpBZG9uaXMvQ29yZS9WYWxpZGF0b3JcIjtcbmltcG9ydCB0eXBlIHsgSHR0cENvbnRleHRDb250cmFjdCB9IGZyb20gXCJAaW9jOkFkb25pcy9Db3JlL0h0dHBDb250ZXh0XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEN1c3RvbWVyVmFsaWRhdG9yIHtcbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIGN0eDogSHR0cENvbnRleHRDb250cmFjdCkge31cblxuICBwdWJsaWMgc2NoZW1hID0gc2NoZW1hLmNyZWF0ZSh7XG4gICAgY3VzdG9tZXJfaWQ6IHNjaGVtYS5udW1iZXIub3B0aW9uYWwoW1xuICAgICAgcnVsZXMudW5pcXVlKHtcbiAgICAgICAgdGFibGU6IFwiY3VzdG9tZXJzXCIsXG4gICAgICAgIGNvbHVtbjogXCJpZFwiLFxuICAgICAgICB3aGVyZTogeyBpZDogdGhpcy5jdHgucmVxdWVzdC5pbnB1dChcImlkXCIpIH0sXG4gICAgICB9KSxcbiAgICBdKSxcbiAgICBuYW1lOiBzY2hlbWEuc3RyaW5nKCksXG4gICAgZW1haWw6IHNjaGVtYS5zdHJpbmcoW1xuICAgICAgcnVsZXMuZW1haWwoKSxcbiAgICAgIHJ1bGVzLnVuaXF1ZSh7IHRhYmxlOiBcImN1c3RvbWVyc1wiLCBjb2x1bW46IFwiZW1haWxcIiB9KSxcbiAgICBdKSxcbiAgICBkb2N1bWVudDogc2NoZW1hLnN0cmluZyhbXG4gICAgICBydWxlcy51bmlxdWUoeyB0YWJsZTogXCJjdXN0b21lcnNcIiwgY29sdW1uOiBcImRvY3VtZW50XCIgfSksXG4gICAgXSksXG4gICAgcGhvbmU6IHNjaGVtYS5zdHJpbmcoW3J1bGVzLm1vYmlsZSh7IGxvY2FsZTogW1wiZXMtQ09cIl0gfSldKSxcbiAgICBnZW5kZXI6IHNjaGVtYS5zdHJpbmcoW3J1bGVzLnJlZ2V4KC9eKE18RnxPKSQvKV0pLFxuICB9KTtcbiAgcHVibGljIG1lc3NhZ2VzOiBDdXN0b21NZXNzYWdlcyA9IHtcbiAgICBcIm5hbWUucmVxdWlyZWRcIjogXCJFbCBjYW1wbyBuYW1lIGVzIHJlcXVlcmlkb1wiLFxuICAgIFwiZW1haWwucmVxdWlyZWRcIjogXCJFbCBjYW1wbyBlbWFpbCBlcyByZXF1ZXJpZG9cIixcbiAgICBcImVtYWlsLmVtYWlsXCI6IFwiRWwgY2FtcG8gZW1haWwgZGViZSBzZXIgdW4gY29ycmVvIHbDoWxpZG9cIixcbiAgICBcImVtYWlsLnVuaXF1ZVwiOiBcIkVsIGNhbXBvIGVtYWlsIHlhIGV4aXN0ZSBlbiBsYSB0YWJsYSBjdXN0b21lcnNcIixcbiAgICBcImRvY3VtZW50LnJlcXVpcmVkXCI6IFwiRWwgY2FtcG8gZG9jdW1lbnQgZXMgcmVxdWVyaWRvXCIsXG4gICAgXCJkb2N1bWVudC51bmlxdWVcIjogXCJFbCBjYW1wbyBkb2N1bWVudCB5YSBleGlzdGUgZW4gbGEgdGFibGEgY3VzdG9tZXJzXCIsXG4gICAgXCJwaG9uZS5yZXF1aXJlZFwiOiBcIkVsIGNhbXBvIHBob25lIGVzIHJlcXVlcmlkb1wiLFxuICAgIFwicGhvbmUubW9iaWxlXCI6IFwiRWwgY2FtcG8gcGhvbmUgZGViZSBzZXIgdW4gbsO6bWVybyBkZSB0ZWzDqWZvbm8gdsOhbGlkb1wiLFxuICB9O1xufVxuIl19