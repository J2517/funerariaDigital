"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Validator_1 = global[Symbol.for('ioc.use')]("Adonis/Core/Validator");
class AdministratorValidator {
    constructor(ctx) {
        this.ctx = ctx;
        this.schema = Validator_1.schema.create({
            administrator_id: Validator_1.schema.number.optional([
                Validator_1.rules.unique({
                    table: "administrators",
                    column: "id",
                    where: { id: this.ctx.request.input("id") },
                }),
            ]),
            name: Validator_1.schema.string({}, [
                Validator_1.rules.required(),
                Validator_1.rules.minLength(3),
                Validator_1.rules.maxLength(255),
            ]),
            email: Validator_1.schema.string({}, [
                Validator_1.rules.required(),
                Validator_1.rules.email(),
                Validator_1.rules.unique({ table: "administrators", column: "email" }),
            ]),
            responsibility: Validator_1.schema.string({}, [
                Validator_1.rules.required(),
                Validator_1.rules.minLength(3),
                Validator_1.rules.maxLength(255),
            ]),
            salary: Validator_1.schema.number([Validator_1.rules.required(), Validator_1.rules.unsigned()]),
        });
        this.messages = {
            "name.required": "El campo nombre es requerido",
            "name.minLength": "El campo nombre debe tener al menos 3 caracteres",
            "name.maxLength": "El campo nombre debe tener como máximo 255 caracteres",
            "email.required": "El campo email es requerido",
            "email.email": "El campo email debe ser un correo válido",
            "email.unique": "El campo email ya se encuentra registrado",
            "responsibility.required": "El campo responsabilidad es requerido",
            "responsibility.minLength": "El campo responsabilidad debe tener al menos 3 caracteres",
            "responsibility.maxLength": "El campo responsabilidad debe tener como máximo 255 caracteres",
            "salary.required": "El campo salario es requerido",
            "salary.unsigned": "El campo salario debe ser un número positivo",
        };
    }
}
exports.default = AdministratorValidator;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQWRtaW5pc3RyYXRvclZhbGlkYXRvci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkFkbWluaXN0cmF0b3JWYWxpZGF0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwyRUFBMkU7QUFHM0UsTUFBcUIsc0JBQXNCO0lBQ3pDLFlBQXNCLEdBQXdCO1FBQXhCLFFBQUcsR0FBSCxHQUFHLENBQXFCO1FBRXZDLFdBQU0sR0FBRyxrQkFBTSxDQUFDLE1BQU0sQ0FBQztZQUM1QixnQkFBZ0IsRUFBRSxrQkFBTSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUM7Z0JBQ3ZDLGlCQUFLLENBQUMsTUFBTSxDQUFDO29CQUNYLEtBQUssRUFBRSxnQkFBZ0I7b0JBQ3ZCLE1BQU0sRUFBRSxJQUFJO29CQUNaLEtBQUssRUFBRSxFQUFFLEVBQUUsRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEVBQUU7aUJBQzVDLENBQUM7YUFDSCxDQUFDO1lBQ0YsSUFBSSxFQUFFLGtCQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRTtnQkFDdEIsaUJBQUssQ0FBQyxRQUFRLEVBQUU7Z0JBQ2hCLGlCQUFLLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQztnQkFDbEIsaUJBQUssQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDO2FBQ3JCLENBQUM7WUFDRixLQUFLLEVBQUUsa0JBQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFO2dCQUN2QixpQkFBSyxDQUFDLFFBQVEsRUFBRTtnQkFDaEIsaUJBQUssQ0FBQyxLQUFLLEVBQUU7Z0JBQ2IsaUJBQUssQ0FBQyxNQUFNLENBQUMsRUFBRSxLQUFLLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxFQUFFLE9BQU8sRUFBRSxDQUFDO2FBQzNELENBQUM7WUFDRixjQUFjLEVBQUUsa0JBQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFO2dCQUNoQyxpQkFBSyxDQUFDLFFBQVEsRUFBRTtnQkFDaEIsaUJBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDO2dCQUNsQixpQkFBSyxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUM7YUFDckIsQ0FBQztZQUNGLE1BQU0sRUFBRSxrQkFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLGlCQUFLLENBQUMsUUFBUSxFQUFFLEVBQUUsaUJBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQyxDQUFDO1NBQzVELENBQUMsQ0FBQztRQUVJLGFBQVEsR0FBbUI7WUFDaEMsZUFBZSxFQUFFLDhCQUE4QjtZQUMvQyxnQkFBZ0IsRUFBRSxrREFBa0Q7WUFDcEUsZ0JBQWdCLEVBQUUsdURBQXVEO1lBQ3pFLGdCQUFnQixFQUFFLDZCQUE2QjtZQUMvQyxhQUFhLEVBQUUsMENBQTBDO1lBQ3pELGNBQWMsRUFBRSwyQ0FBMkM7WUFDM0QseUJBQXlCLEVBQUUsdUNBQXVDO1lBQ2xFLDBCQUEwQixFQUN4QiwyREFBMkQ7WUFDN0QsMEJBQTBCLEVBQ3hCLGdFQUFnRTtZQUNsRSxpQkFBaUIsRUFBRSwrQkFBK0I7WUFDbEQsaUJBQWlCLEVBQUUsOENBQThDO1NBQ2xFLENBQUM7SUExQ2dELENBQUM7Q0EyQ3BEO0FBNUNELHlDQTRDQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNjaGVtYSwgQ3VzdG9tTWVzc2FnZXMsIHJ1bGVzIH0gZnJvbSBcIkBpb2M6QWRvbmlzL0NvcmUvVmFsaWRhdG9yXCI7XG5pbXBvcnQgdHlwZSB7IEh0dHBDb250ZXh0Q29udHJhY3QgfSBmcm9tIFwiQGlvYzpBZG9uaXMvQ29yZS9IdHRwQ29udGV4dFwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBBZG1pbmlzdHJhdG9yVmFsaWRhdG9yIHtcbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIGN0eDogSHR0cENvbnRleHRDb250cmFjdCkgeyB9XG5cbiAgcHVibGljIHNjaGVtYSA9IHNjaGVtYS5jcmVhdGUoe1xuICAgIGFkbWluaXN0cmF0b3JfaWQ6IHNjaGVtYS5udW1iZXIub3B0aW9uYWwoW1xuICAgICAgcnVsZXMudW5pcXVlKHtcbiAgICAgICAgdGFibGU6IFwiYWRtaW5pc3RyYXRvcnNcIixcbiAgICAgICAgY29sdW1uOiBcImlkXCIsXG4gICAgICAgIHdoZXJlOiB7IGlkOiB0aGlzLmN0eC5yZXF1ZXN0LmlucHV0KFwiaWRcIikgfSxcbiAgICAgIH0pLFxuICAgIF0pLFxuICAgIG5hbWU6IHNjaGVtYS5zdHJpbmcoe30sIFtcbiAgICAgIHJ1bGVzLnJlcXVpcmVkKCksXG4gICAgICBydWxlcy5taW5MZW5ndGgoMyksXG4gICAgICBydWxlcy5tYXhMZW5ndGgoMjU1KSxcbiAgICBdKSxcbiAgICBlbWFpbDogc2NoZW1hLnN0cmluZyh7fSwgW1xuICAgICAgcnVsZXMucmVxdWlyZWQoKSxcbiAgICAgIHJ1bGVzLmVtYWlsKCksXG4gICAgICBydWxlcy51bmlxdWUoeyB0YWJsZTogXCJhZG1pbmlzdHJhdG9yc1wiLCBjb2x1bW46IFwiZW1haWxcIiB9KSxcbiAgICBdKSxcbiAgICByZXNwb25zaWJpbGl0eTogc2NoZW1hLnN0cmluZyh7fSwgW1xuICAgICAgcnVsZXMucmVxdWlyZWQoKSxcbiAgICAgIHJ1bGVzLm1pbkxlbmd0aCgzKSxcbiAgICAgIHJ1bGVzLm1heExlbmd0aCgyNTUpLFxuICAgIF0pLFxuICAgIHNhbGFyeTogc2NoZW1hLm51bWJlcihbcnVsZXMucmVxdWlyZWQoKSwgcnVsZXMudW5zaWduZWQoKV0pLFxuICB9KTtcblxuICBwdWJsaWMgbWVzc2FnZXM6IEN1c3RvbU1lc3NhZ2VzID0ge1xuICAgIFwibmFtZS5yZXF1aXJlZFwiOiBcIkVsIGNhbXBvIG5vbWJyZSBlcyByZXF1ZXJpZG9cIixcbiAgICBcIm5hbWUubWluTGVuZ3RoXCI6IFwiRWwgY2FtcG8gbm9tYnJlIGRlYmUgdGVuZXIgYWwgbWVub3MgMyBjYXJhY3RlcmVzXCIsXG4gICAgXCJuYW1lLm1heExlbmd0aFwiOiBcIkVsIGNhbXBvIG5vbWJyZSBkZWJlIHRlbmVyIGNvbW8gbcOheGltbyAyNTUgY2FyYWN0ZXJlc1wiLFxuICAgIFwiZW1haWwucmVxdWlyZWRcIjogXCJFbCBjYW1wbyBlbWFpbCBlcyByZXF1ZXJpZG9cIixcbiAgICBcImVtYWlsLmVtYWlsXCI6IFwiRWwgY2FtcG8gZW1haWwgZGViZSBzZXIgdW4gY29ycmVvIHbDoWxpZG9cIixcbiAgICBcImVtYWlsLnVuaXF1ZVwiOiBcIkVsIGNhbXBvIGVtYWlsIHlhIHNlIGVuY3VlbnRyYSByZWdpc3RyYWRvXCIsXG4gICAgXCJyZXNwb25zaWJpbGl0eS5yZXF1aXJlZFwiOiBcIkVsIGNhbXBvIHJlc3BvbnNhYmlsaWRhZCBlcyByZXF1ZXJpZG9cIixcbiAgICBcInJlc3BvbnNpYmlsaXR5Lm1pbkxlbmd0aFwiOlxuICAgICAgXCJFbCBjYW1wbyByZXNwb25zYWJpbGlkYWQgZGViZSB0ZW5lciBhbCBtZW5vcyAzIGNhcmFjdGVyZXNcIixcbiAgICBcInJlc3BvbnNpYmlsaXR5Lm1heExlbmd0aFwiOlxuICAgICAgXCJFbCBjYW1wbyByZXNwb25zYWJpbGlkYWQgZGViZSB0ZW5lciBjb21vIG3DoXhpbW8gMjU1IGNhcmFjdGVyZXNcIixcbiAgICBcInNhbGFyeS5yZXF1aXJlZFwiOiBcIkVsIGNhbXBvIHNhbGFyaW8gZXMgcmVxdWVyaWRvXCIsXG4gICAgXCJzYWxhcnkudW5zaWduZWRcIjogXCJFbCBjYW1wbyBzYWxhcmlvIGRlYmUgc2VyIHVuIG7Dum1lcm8gcG9zaXRpdm9cIixcbiAgfTtcbn1cbiJdfQ==