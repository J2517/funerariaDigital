"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Validator_1 = global[Symbol.for('ioc.use')]("Adonis/Core/Validator");
class CommentValidator {
    constructor(ctx) {
        this.ctx = ctx;
        this.schema = Validator_1.schema.create({
            comment_id: Validator_1.schema.number.optional([
                Validator_1.rules.unique({
                    table: "comments",
                    column: "id",
                    where: { id: this.ctx.request.input("id") },
                }),
            ]),
            user_id: Validator_1.schema.string(),
            rating: Validator_1.schema.number([Validator_1.rules.range(1, 5)]),
            comment: Validator_1.schema.string({ trim: true }, [Validator_1.rules.maxLength(500)]),
            service_execution_id: Validator_1.schema.number([
                Validator_1.rules.exists({
                    table: 'service_executions', column: 'id', where: {
                        id: this.ctx.request.input('service_execution_id')
                    }
                }),
            ]),
        });
        this.messages = {
            "rating.number": "La calificacion debe ser un numero.",
            "rating.range": "La calificaci√≥n debe estar entre 1 y 5.",
            "comment.maxLength": "El comentario no puede exceder los 500 caracteres.",
            "service_execution_id.exists": "Service Execution no existe",
        };
    }
}
exports.default = CommentValidator;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29tbWVudFZhbGlkYXRvci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkNvbW1lbnRWYWxpZGF0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwyRUFBMkU7QUFHM0UsTUFBcUIsZ0JBQWdCO0lBQ25DLFlBQXNCLEdBQXdCO1FBQXhCLFFBQUcsR0FBSCxHQUFHLENBQXFCO1FBRXZDLFdBQU0sR0FBRyxrQkFBTSxDQUFDLE1BQU0sQ0FBQztZQUM1QixVQUFVLEVBQUUsa0JBQU0sQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDO2dCQUNqQyxpQkFBSyxDQUFDLE1BQU0sQ0FBQztvQkFDWCxLQUFLLEVBQUUsVUFBVTtvQkFDakIsTUFBTSxFQUFFLElBQUk7b0JBQ1osS0FBSyxFQUFFLEVBQUUsRUFBRSxFQUFFLElBQUksQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsRUFBRTtpQkFDNUMsQ0FBQzthQUNILENBQUM7WUFDRixPQUFPLEVBQUUsa0JBQU0sQ0FBQyxNQUFNLEVBQUU7WUFDeEIsTUFBTSxFQUFFLGtCQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsaUJBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDMUMsT0FBTyxFQUFFLGtCQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxFQUFFLENBQUMsaUJBQUssQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztZQUM5RCxvQkFBb0IsRUFBRSxrQkFBTSxDQUFDLE1BQU0sQ0FBQztnQkFDbEMsaUJBQUssQ0FBQyxNQUFNLENBQUM7b0JBQ1gsS0FBSyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFO3dCQUNoRCxFQUFFLEVBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLHNCQUFzQixDQUFDO3FCQUNuRDtpQkFDRixDQUFDO2FBQ0gsQ0FBQztTQUNILENBQUMsQ0FBQztRQUVJLGFBQVEsR0FBbUI7WUFDaEMsZUFBZSxFQUFFLHFDQUFxQztZQUN0RCxjQUFjLEVBQUUseUNBQXlDO1lBQ3pELG1CQUFtQixFQUFFLG9EQUFvRDtZQUN6RSw2QkFBNkIsRUFBRSw2QkFBNkI7U0FDN0QsQ0FBQztJQTNCK0MsQ0FBQztDQTRCbkQ7QUE3QkQsbUNBNkJDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc2NoZW1hLCBDdXN0b21NZXNzYWdlcywgcnVsZXMgfSBmcm9tIFwiQGlvYzpBZG9uaXMvQ29yZS9WYWxpZGF0b3JcIjtcbmltcG9ydCB0eXBlIHsgSHR0cENvbnRleHRDb250cmFjdCB9IGZyb20gXCJAaW9jOkFkb25pcy9Db3JlL0h0dHBDb250ZXh0XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENvbW1lbnRWYWxpZGF0b3Ige1xuICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgY3R4OiBIdHRwQ29udGV4dENvbnRyYWN0KSB7fVxuXG4gIHB1YmxpYyBzY2hlbWEgPSBzY2hlbWEuY3JlYXRlKHtcbiAgICBjb21tZW50X2lkOiBzY2hlbWEubnVtYmVyLm9wdGlvbmFsKFtcbiAgICAgIHJ1bGVzLnVuaXF1ZSh7XG4gICAgICAgIHRhYmxlOiBcImNvbW1lbnRzXCIsXG4gICAgICAgIGNvbHVtbjogXCJpZFwiLFxuICAgICAgICB3aGVyZTogeyBpZDogdGhpcy5jdHgucmVxdWVzdC5pbnB1dChcImlkXCIpIH0sXG4gICAgICB9KSxcbiAgICBdKSxcbiAgICB1c2VyX2lkOiBzY2hlbWEuc3RyaW5nKCksXG4gICAgcmF0aW5nOiBzY2hlbWEubnVtYmVyKFtydWxlcy5yYW5nZSgxLCA1KV0pLFxuICAgIGNvbW1lbnQ6IHNjaGVtYS5zdHJpbmcoeyB0cmltOiB0cnVlIH0sIFtydWxlcy5tYXhMZW5ndGgoNTAwKV0pLFxuICAgIHNlcnZpY2VfZXhlY3V0aW9uX2lkOiBzY2hlbWEubnVtYmVyKFtcbiAgICAgIHJ1bGVzLmV4aXN0cyh7XG4gICAgICAgIHRhYmxlOiAnc2VydmljZV9leGVjdXRpb25zJywgY29sdW1uOiAnaWQnLCB3aGVyZToge1xuICAgICAgICAgIGlkOiB0aGlzLmN0eC5yZXF1ZXN0LmlucHV0KCdzZXJ2aWNlX2V4ZWN1dGlvbl9pZCcpXG4gICAgICAgIH1cbiAgICAgIH0pLFxuICAgIF0pLFxuICB9KTtcblxuICBwdWJsaWMgbWVzc2FnZXM6IEN1c3RvbU1lc3NhZ2VzID0ge1xuICAgIFwicmF0aW5nLm51bWJlclwiOiBcIkxhIGNhbGlmaWNhY2lvbiBkZWJlIHNlciB1biBudW1lcm8uXCIsXG4gICAgXCJyYXRpbmcucmFuZ2VcIjogXCJMYSBjYWxpZmljYWNpw7NuIGRlYmUgZXN0YXIgZW50cmUgMSB5IDUuXCIsXG4gICAgXCJjb21tZW50Lm1heExlbmd0aFwiOiBcIkVsIGNvbWVudGFyaW8gbm8gcHVlZGUgZXhjZWRlciBsb3MgNTAwIGNhcmFjdGVyZXMuXCIsXG4gICAgXCJzZXJ2aWNlX2V4ZWN1dGlvbl9pZC5leGlzdHNcIjogXCJTZXJ2aWNlIEV4ZWN1dGlvbiBubyBleGlzdGVcIixcbiAgfTtcbn1cbiJdfQ==