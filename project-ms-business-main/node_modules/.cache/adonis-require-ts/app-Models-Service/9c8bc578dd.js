"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var _a, _b, _c, _d, _e, _f, _g;
Object.defineProperty(exports, "__esModule", { value: true });
const luxon_1 = require("luxon");
const Orm_1 = global[Symbol.for('ioc.use')]("Adonis/Lucid/Orm");
const Relocation_1 = __importDefault(require("./Relocation"));
const ServicePlan_1 = __importDefault(require("./ServicePlan"));
const Sepulture_1 = __importDefault(require("./Sepulture"));
const Cremation_1 = __importDefault(require("./Cremation"));
const ServiceExecution_1 = __importDefault(require("./ServiceExecution"));
class Service extends Orm_1.BaseModel {
}
__decorate([
    (0, Orm_1.column)({ isPrimary: true }),
    __metadata("design:type", Number)
], Service.prototype, "id", void 0);
__decorate([
    (0, Orm_1.column)(),
    __metadata("design:type", String)
], Service.prototype, "name_service", void 0);
__decorate([
    Orm_1.column.dateTime({ autoCreate: true }),
    __metadata("design:type", typeof (_a = typeof luxon_1.DateTime !== "undefined" && luxon_1.DateTime) === "function" ? _a : Object)
], Service.prototype, "createdAt", void 0);
__decorate([
    Orm_1.column.dateTime({ autoCreate: true, autoUpdate: true }),
    __metadata("design:type", typeof (_b = typeof luxon_1.DateTime !== "undefined" && luxon_1.DateTime) === "function" ? _b : Object)
], Service.prototype, "updatedAt", void 0);
__decorate([
    (0, Orm_1.hasMany)(() => ServicePlan_1.default, {
        foreignKey: "service_id",
    }),
    __metadata("design:type", typeof (_c = typeof Orm_1.HasMany !== "undefined" && Orm_1.HasMany) === "function" ? _c : Object)
], Service.prototype, "servicePlans", void 0);
__decorate([
    (0, Orm_1.hasMany)(() => Relocation_1.default, {
        foreignKey: "service_id",
    }),
    __metadata("design:type", typeof (_d = typeof Orm_1.HasMany !== "undefined" && Orm_1.HasMany) === "function" ? _d : Object)
], Service.prototype, "relocations", void 0);
__decorate([
    (0, Orm_1.hasMany)(() => Sepulture_1.default, {
        foreignKey: "service_id",
    }),
    __metadata("design:type", typeof (_e = typeof Orm_1.HasMany !== "undefined" && Orm_1.HasMany) === "function" ? _e : Object)
], Service.prototype, "sepultures", void 0);
__decorate([
    (0, Orm_1.hasMany)(() => Cremation_1.default, {
        foreignKey: "service_id",
    }),
    __metadata("design:type", typeof (_f = typeof Orm_1.HasMany !== "undefined" && Orm_1.HasMany) === "function" ? _f : Object)
], Service.prototype, "cremations", void 0);
__decorate([
    (0, Orm_1.hasMany)(() => ServiceExecution_1.default, {
        foreignKey: "service_id",
    }),
    __metadata("design:type", typeof (_g = typeof Orm_1.HasMany !== "undefined" && Orm_1.HasMany) === "function" ? _g : Object)
], Service.prototype, "serviceExecutions", void 0);
exports.default = Service;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIlNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsaUNBQWlDO0FBQ2pDLGdFQUE0RTtBQUM1RSw4REFBc0M7QUFDdEMsZ0VBQXdDO0FBQ3hDLDREQUFvQztBQUNwQyw0REFBb0M7QUFDcEMsMEVBQWtEO0FBRWxELE1BQXFCLE9BQVEsU0FBUSxlQUFTO0NBd0M3QztBQXRDQztJQURDLElBQUEsWUFBTSxFQUFDLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxDQUFDOzttQ0FDVjtBQUdsQjtJQURDLElBQUEsWUFBTSxHQUFFOzs2Q0FDbUI7QUFHNUI7SUFEQyxZQUFNLENBQUMsUUFBUSxDQUFDLEVBQUUsVUFBVSxFQUFFLElBQUksRUFBRSxDQUFDO2tEQUNwQixnQkFBUSxvQkFBUixnQkFBUTswQ0FBQztBQUczQjtJQURDLFlBQU0sQ0FBQyxRQUFRLENBQUMsRUFBRSxVQUFVLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxJQUFJLEVBQUUsQ0FBQztrREFDdEMsZ0JBQVEsb0JBQVIsZ0JBQVE7MENBQUM7QUFLM0I7SUFIQyxJQUFBLGFBQU8sRUFBQyxHQUFHLEVBQUUsQ0FBQyxxQkFBVyxFQUFFO1FBQzFCLFVBQVUsRUFBRSxZQUFZO0tBQ3pCLENBQUM7a0RBQ21CLGFBQU8sb0JBQVAsYUFBTzs2Q0FBcUI7QUFNakQ7SUFIQyxJQUFBLGFBQU8sRUFBQyxHQUFHLEVBQUUsQ0FBQyxvQkFBVSxFQUFFO1FBQ3pCLFVBQVUsRUFBRSxZQUFZO0tBQ3pCLENBQUM7a0RBQ2tCLGFBQU8sb0JBQVAsYUFBTzs0Q0FBb0I7QUFNL0M7SUFIQyxJQUFBLGFBQU8sRUFBQyxHQUFHLEVBQUUsQ0FBQyxtQkFBUyxFQUFFO1FBQ3hCLFVBQVUsRUFBRSxZQUFZO0tBQ3pCLENBQUM7a0RBQ2lCLGFBQU8sb0JBQVAsYUFBTzsyQ0FBbUI7QUFNN0M7SUFIQyxJQUFBLGFBQU8sRUFBQyxHQUFHLEVBQUUsQ0FBQyxtQkFBUyxFQUFFO1FBQ3hCLFVBQVUsRUFBRSxZQUFZO0tBQ3pCLENBQUM7a0RBQ2lCLGFBQU8sb0JBQVAsYUFBTzsyQ0FBbUI7QUFLN0M7SUFIQyxJQUFBLGFBQU8sRUFBQyxHQUFHLEVBQUUsQ0FBQywwQkFBZ0IsRUFBRTtRQUMvQixVQUFVLEVBQUUsWUFBWTtLQUN6QixDQUFDO2tEQUN3QixhQUFPLG9CQUFQLGFBQU87a0RBQTBCO0FBdkM3RCwwQkF3Q0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEYXRlVGltZSB9IGZyb20gXCJsdXhvblwiO1xuaW1wb3J0IHsgQmFzZU1vZGVsLCBjb2x1bW4sIEhhc01hbnksIGhhc01hbnkgfSBmcm9tIFwiQGlvYzpBZG9uaXMvTHVjaWQvT3JtXCI7XG5pbXBvcnQgUmVsb2NhdGlvbiBmcm9tIFwiLi9SZWxvY2F0aW9uXCI7XG5pbXBvcnQgU2VydmljZVBsYW4gZnJvbSBcIi4vU2VydmljZVBsYW5cIjtcbmltcG9ydCBTZXB1bHR1cmUgZnJvbSBcIi4vU2VwdWx0dXJlXCI7XG5pbXBvcnQgQ3JlbWF0aW9uIGZyb20gXCIuL0NyZW1hdGlvblwiO1xuaW1wb3J0IFNlcnZpY2VFeGVjdXRpb24gZnJvbSBcIi4vU2VydmljZUV4ZWN1dGlvblwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTZXJ2aWNlIGV4dGVuZHMgQmFzZU1vZGVsIHtcbiAgQGNvbHVtbih7IGlzUHJpbWFyeTogdHJ1ZSB9KVxuICBwdWJsaWMgaWQ6IG51bWJlcjtcblxuICBAY29sdW1uKClcbiAgcHVibGljIG5hbWVfc2VydmljZTogc3RyaW5nO1xuXG4gIEBjb2x1bW4uZGF0ZVRpbWUoeyBhdXRvQ3JlYXRlOiB0cnVlIH0pXG4gIHB1YmxpYyBjcmVhdGVkQXQ6IERhdGVUaW1lO1xuXG4gIEBjb2x1bW4uZGF0ZVRpbWUoeyBhdXRvQ3JlYXRlOiB0cnVlLCBhdXRvVXBkYXRlOiB0cnVlIH0pXG4gIHB1YmxpYyB1cGRhdGVkQXQ6IERhdGVUaW1lO1xuXG4gIEBoYXNNYW55KCgpID0+IFNlcnZpY2VQbGFuLCB7XG4gICAgZm9yZWlnbktleTogXCJzZXJ2aWNlX2lkXCIsXG4gIH0pXG4gIHB1YmxpYyBzZXJ2aWNlUGxhbnM6IEhhc01hbnk8dHlwZW9mIFNlcnZpY2VQbGFuPjtcblxuICAvLyBSZWxhdGlvbnNoaXBzIHdpdGggUmVsb2NhdGlvbiwgd2hpY2ggaXMgYSBjaGlsZCBvZiBTZXJ2aWNlXG4gIEBoYXNNYW55KCgpID0+IFJlbG9jYXRpb24sIHtcbiAgICBmb3JlaWduS2V5OiBcInNlcnZpY2VfaWRcIixcbiAgfSlcbiAgcHVibGljIHJlbG9jYXRpb25zOiBIYXNNYW55PHR5cGVvZiBSZWxvY2F0aW9uPjtcblxuICAvL1JlbGF0aW9uc2hpcHMgd2l0aCBTZXB1bHR1cmUsIHdoaWNoIGlzIGEgY2hpbGQgb2YgU2VydmljZVxuICBAaGFzTWFueSgoKSA9PiBTZXB1bHR1cmUsIHtcbiAgICBmb3JlaWduS2V5OiBcInNlcnZpY2VfaWRcIixcbiAgfSlcbiAgcHVibGljIHNlcHVsdHVyZXM6IEhhc01hbnk8dHlwZW9mIFNlcHVsdHVyZT47XG5cbiAgLy9SZWxhdGlvbnNoaXBzIHdpdGggQ3JlbWF0aW9uLCB3aGljaCBpcyBhIGNoaWxkIG9mIFNlcnZpY2VcbiAgQGhhc01hbnkoKCkgPT4gQ3JlbWF0aW9uLCB7XG4gICAgZm9yZWlnbktleTogXCJzZXJ2aWNlX2lkXCIsXG4gIH0pXG4gIHB1YmxpYyBjcmVtYXRpb25zOiBIYXNNYW55PHR5cGVvZiBDcmVtYXRpb24+O1xuXG4gIEBoYXNNYW55KCgpID0+IFNlcnZpY2VFeGVjdXRpb24sIHtcbiAgICBmb3JlaWduS2V5OiBcInNlcnZpY2VfaWRcIixcbiAgfSlcbiAgcHVibGljIHNlcnZpY2VFeGVjdXRpb25zOiBIYXNNYW55PHR5cGVvZiBTZXJ2aWNlRXhlY3V0aW9uPjtcbn1cbiJdfQ==